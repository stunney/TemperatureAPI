{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Simple Temperature API",
    "description" : "This API is meant as an exchange mechanism for temperature readings",
    "contact" : {
      "email" : "stephen@solenoidsoft.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/Solenoid/Temperature/1.0.0",
    "description" : "Temperature Reading API"
  } ],
  "tags" : [ {
    "name" : "admins",
    "description" : "Secured Admin-only calls"
  }, {
    "name" : "developers",
    "description" : "Operations available to regular developers"
  } ],
  "paths" : {
    "/temperature" : {
      "get" : {
        "tags" : [ "developers" ],
        "summary" : "searches readings",
        "description" : "By passing in the appropriate options, you can search for\ntemperature readings in the system\n",
        "operationId" : "searchTemperatures",
        "parameters" : [ {
          "name" : "searchString",
          "in" : "query",
          "description" : "pass an optional search string for looking up readings",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "number of records to skip for pagination",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum number of records to return",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 50.0,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "DateTime (UTC) starting (inclusive) for search",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "DateTime (UTC) ending (exclusive) for search",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "sensor",
          "in" : "header",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TemperatureSensor"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TemperatureReading"
                  },
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "adds a temperature sensor reading",
        "description" : "Adds a reading",
        "operationId" : "addReading",
        "requestBody" : {
          "description" : "Inventory item to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TemperatureReading"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "TemperatureReading" : {
        "required" : [ "dateTime", "id", "sensor", "unitOfMeasure", "value" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "sensor" : {
            "$ref" : "#/components/schemas/TemperatureSensor"
          },
          "dateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "value" : {
            "type" : "number",
            "format" : "float",
            "example" : 32
          },
          "unitOfMeasure" : {
            "type" : "string",
            "description" : "C - Celcius F - Fahrenheit K - Kelvin R - Rankine D - Delisle N - Newton E - Réaumur O - Rømer\n",
            "enum" : [ "C", "F", "K", "R", "D", "N", "E", "O" ]
          }
        },
        "example" : {
          "dateTime" : "2000-01-23T04:56:07.000+00:00",
          "unitOfMeasure" : "C",
          "sensor" : {
            "name" : "User-friendly name for a sensor",
            "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
          },
          "id" : "d290f1ee-6c54-4b01-90e6-d701748f0851",
          "value" : 32
        }
      },
      "TemperatureSensor" : {
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for a specific sensor",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string",
            "example" : "User-friendly name for a sensor"
          }
        },
        "example" : {
          "name" : "User-friendly name for a sensor",
          "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
        }
      }
    }
  }
}
